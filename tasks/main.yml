---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include RedHat major version specific varaibles.
  include_vars:  "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
  when: ansible_os_family == 'RedHat'

- name: Include set_fact tasks
  include: set_facts.yml

- name: Install Apache/Apache Development Packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ apache_packages }}"

- name: "Create Apache {{ apache_ports_file }}"
  file:
    path: "{{ apache_ports_file }}"
    owner: root
    group: root
    mode: '0644'
    state: touch
  changed_when: false

- name: "Set Apache {{ apache_ports_file }} header"
  blockinfile:
    dest: "{{ apache_ports_file }}"
    insertbefore: BOF
    block: |
      #
      # Ansible managed: Do NOT edit this file manually!
      #
  changed_when: false

# This task is after the install task meaning
# the package ought to create them and not ansible
- name: Manage apache group
  group:
    name: "{{ apache_group }}"
    state: present

- name: Manage apache user
  user:
    name: "{{ apache_user }}"
    group: "{{ apache_group }}"
    state: present

- name: Get installed version of Apache
  command: 'apachectl -v'
  changed_when: false
  check_mode: no
  register: _apache_version

- name: Create apache_version variable.
  set_fact:
    apache_version: "{{ _apache_version.stdout.split()[2].split('/')[1] }}"

- name: Include Apache 22 specific vars
  include_vars: apache22.yml
  when: "apache_version.split('.')[1] == '2'"

- name: Include Apache 24 specific vars
  include_vars: apache24.yml
  when: "apache_version.split('.')[1] == '4'"

######## Loook at managing apache_conf_dir

- name: Configure Apache httpd.conf
  template:
    src: "{{ apache_conf_template }}"
    dest: "{{ apache_conf_dir }}/{{ apache_conf_file }}"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    setype: httpd_config_t
    mode: '0644'
  when: apache_conf_manage
  notify: Test and Restart Apache
  become: true

########### Look at manageing apache_confd_dir

- name: Include Apache modules tasks
  include: mods.yml

- name: Manage VirtualHosts
  include: vhosts.yml
  with_items: "{{ apache_vhosts }}"
  when: apache_vhosts | length > 0

- name: Ensure Apache has selected running and boot state
  service:
    name: "{{ apache_service }}"
    state: "{{ apache_state }}"
    enabled: "{{ apache_enabled }}"
