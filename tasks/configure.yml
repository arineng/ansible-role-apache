---
- name: "Create Apache {{ apache_ports_file }}"
  blockinfile:
    dest: "{{ apache_ports_file }}"
    insertbefore: BOF
    block: |
      #
      # Ansible managed: Do NOT edit this file manually!
      #
    owner: root
    group: root
    mode: '0644'
    setype: httpd_config_t
    create: yes
  changed_when: false

- name: "Set Apache {{ apache_conf_file }} header"
  blockinfile:
    dest: "{{ apache_conf_dir }}/{{ apache_conf_file }}"
    insertbefore: BOF
    block: |
      #
      # Ansible managed: Blocks of this file are managed
      #
      #
  changed_when: false

- name: Update Apache configuration to include ports.conf file
  lineinfile:
    dest: "{{ apache_conf_dir }}/{{ apache_conf_file }}"
    line: Include "{{ apache_ports_file }}"
    insertafter: '^Include'
  notify: Test and Restart Apache

- name: "Get lists of files in {{ apache_httpd_dir }}"
  find:
    file_type: 'file'
    follow: yes
    recurse: yes
    paths: "{{ apache_httpd_dir }}"
    contains: 'Listen.*'
  register: apache_conf_files
  become: true

- name: "Create list of files in {{ apache_httpd_dir }}"
  set_fact:
    apache_conf_files_list:
      "{{ apache_conf_files.files|d({}) | map(attribute='path') | list }}"

- name: "Remove 'Listen' option from {{ apache_httpd_dir }}"
  lineinfile:
    dest: "{{ item }}"
    regexp: '^Listen.*'
    state: absent
  with_items: "{{ apache_conf_files_list }}"
  when: item != apache_ports_file
  notify: Test and Restart Apache

- name: "Remove default VirtualHost entry from ssl.conf"
  replace:
    dest: "{{ apache_confd_dir }}/ssl.conf"
    regexp: '<VirtualHost.*>[\w\W]*?<\/VirtualHost>'
  notify: Test and Restart Apache

- name: "Create FQDN.conf file for ServerName configuration"
  lineinfile:
    dest: "{{ apache_confd_dir }}/fqdn.conf"
    line: 'ServerName localhost'
    owner: root
    group: root
    mode: '0644'
    setype: httpd_config_t
    create: yes
  notify: Test and Restart Apache

# This task is after the install task meaning
# the package ought to create them and not ansible
- name: Manage apache group
  group:
    name: "{{ apache_group }}"
    state: present

- name: Manage apache user
  user:
    name: "{{ apache_user }}"
    group: "{{ apache_group }}"
    state: present
